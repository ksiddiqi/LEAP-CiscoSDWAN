{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome to LEAP 2022 Cisco SD-WAN Lab Speakers Khurram Afzal Technical Leader, Cisco CX","title":"Home"},{"location":"#welcome-to-leap-2022","text":"Cisco SD-WAN Lab","title":"Welcome to LEAP 2022"},{"location":"#speakers","text":"Khurram Afzal Technical Leader, Cisco CX","title":"Speakers"},{"location":"Task1-Connect/","text":"Your first task will log on to remote lab using VPN. At the end of this task, you will have a fully network connectivity to a remote server using Remote Desktop. Step 1: Connect to lab using anyconnect VPN You will connect to remote Lab using Cisco VPN AnyConnect client, as shown in below picture. Launch the Cisco VPN AnyConnect client from your PC Enter the remote server for your pod as provided by Lab Speakers. * This remote server will be dcloud-sjc-anyconnect.cisco.com or dcloud-rtp-anyconnect.cisco.com The username and password credentials for this VPN connection will also be provided by the lab admin Note: lab admin will furnish the credentials information to each participant. If you don't have this information please ask the lab speakers. Below is an example of user logging into a reference pod in dcloud-sjc-anyconnect.cisco.com : Hit accept when the prompt appears to accept the VPN connection login Note: credentials used in above screenshot are provided as an example only. Credentials for each pod will be provided by the lab speakers. Step 2: RDP to workstation In this step, you will connect to the workstation with Remote Desktop ( RDP ) client on your machines. Use below details for this RDP session: Workstation/Computer : 198.18.133.252 Username : Administrator Password : C1sco12345 Below screenshot is only an example for this RDP connection: Note: above screenshot is provided as an example only. Step 3: MTPutty and Browser Once you have the RDP session to the remote workstation, then you will use MTputty client (pre-installed on the remote workstation) and Chrome Browser to connect to all devices in this lab. MTputty is already installed on the Desktop of the workstation where you connected using RDP. Run this application by clicking on the icon on the desktop:","title":"Task 1 Remote Connection"},{"location":"Task1-Connect/#step-1-connect-to-lab-using-anyconnect-vpn","text":"You will connect to remote Lab using Cisco VPN AnyConnect client, as shown in below picture. Launch the Cisco VPN AnyConnect client from your PC Enter the remote server for your pod as provided by Lab Speakers. * This remote server will be dcloud-sjc-anyconnect.cisco.com or dcloud-rtp-anyconnect.cisco.com The username and password credentials for this VPN connection will also be provided by the lab admin Note: lab admin will furnish the credentials information to each participant. If you don't have this information please ask the lab speakers. Below is an example of user logging into a reference pod in dcloud-sjc-anyconnect.cisco.com : Hit accept when the prompt appears to accept the VPN connection login Note: credentials used in above screenshot are provided as an example only. Credentials for each pod will be provided by the lab speakers.","title":"Step 1: Connect to lab using anyconnect VPN"},{"location":"Task1-Connect/#step-2-rdp-to-workstation","text":"In this step, you will connect to the workstation with Remote Desktop ( RDP ) client on your machines. Use below details for this RDP session: Workstation/Computer : 198.18.133.252 Username : Administrator Password : C1sco12345 Below screenshot is only an example for this RDP connection: Note: above screenshot is provided as an example only.","title":"Step 2: RDP to workstation"},{"location":"Task1-Connect/#step-3-mtputty-and-browser","text":"Once you have the RDP session to the remote workstation, then you will use MTputty client (pre-installed on the remote workstation) and Chrome Browser to connect to all devices in this lab. MTputty is already installed on the Desktop of the workstation where you connected using RDP. Run this application by clicking on the icon on the desktop:","title":"Step 3: MTPutty and Browser"},{"location":"Task2-Exploring%20Control%20Plane/","text":"Exploring SDWAN Control Plane (vManage GUI, vSmart and vBond) This task will walk through the steps to explore vManage GUI, vBond and VSmart configurations Pre-requisite: Remote Desktop (RDP) session has to be established on RDP client already. You will use RDP client to connect to SDWAN controllers. If RDP session is not operational then please complete the previous Tasks first. Step 1: Exploring vManage GUI In this step we will explore vManage GUI. vManage is a centralized network management system that provides a GUI interface to easily collect data from managed devices, present statistics, host troubleshooting tools, and manage configurations for all devices, templates, and policies. Once you connect to the remote workstation with Remote Desktop (RDP) client; then run Chrome by clicking its shortcut on the Desktop to access vManage GUI. Log on to the vManage using credentials of admin and admin Note: If admin/admin credentials do not work then you may try using cisco/cisco or cisco1/cisco1 The vManage dashboard will be displayed. The dashboard provides a quick summary of the network. At the top, a status indicating reachability will be displayed for any vSmart controllers, vEdge routers, and vBond orchestrators that are installed and have been added to vManage. Here, at a glance, you can view the health of the entire network including the operational state of any device, total number of reboots and crashes, and the state of all controller certificates. This visibility into the network eases the task of managing the SDWAN devices. The number of controllers will be shown with a green up arrow (indicating reachable), or a red down arrow (indicating unreachable). Note: On the next steps, we will verify the controllers are all showing up before moving on to the next task. The menu is located to the left of the Dashboard screen. The following lists each menu and sub-menu item and provides a brief description. Monitor Geography: A map view of the entire network and displays the geographic location of the devices in the network. Network: An inventory of all SDWAN devices in the network along with detailed information on each device. Alarms: Details on alarms generated by all SDWAN devices in the network. Events: Details on events generated by all SDWAN devices in the network. Audit Log: An audit log of all activities on SDWAN devices. ACL Log: System log messages related to access lists (ACLs) configured on a vEdge router. Configuration Devices: Add or delete devices from the overlay network. Certificates: Manage certificates and authenticate Viptela devices in the overlay network. Templates: Create configuration templates for a set of Viptela devices. Policy: Create common policies for a set of vSmart controllers. Security: Create and activate zone-based firewalls vEdge routers Cloud onRamp for SaaS: Optimize access to cloud applications from Direct Internet Access (DIA) nodes in the overlay network. Cloud onRamp for IaaS: Extends SDWAN overlay network into public cloud instances. Create virtual private cloud (VPC) instances for hosting vEdge Cloud routers in the public internet. Tools SSH Terminal: Establish an SSH session to a SDWAN device. Rediscover Network: Locate new devices in the overlay network and synchronize them with the vManage NMS. Operational Commands: Run two or more operational commands as a single command. Maintenance Software Repository: Software Upgrade: Download new software images and upgrade the software image running on SDWAN devices. Device Reboot: Reboot one or more SDWAN devices. Administration Settings: Configure organization name and certificate authorization settings. Manage Users: Add, edit, or delete users and user groups from the vManage NMS. Cluster Management: Create and manage a vManage NMS cluster. vAnalytics Launch vAnalytics: View, at a glance, the performance and availability of the Viptela overlay network, including metrics for carriers, tunnels, and applications. Step 2: Assign vBond IP Address on vManage In this step, you will change vBond IP Address on vManage. Launch Mputty application from the Remote desktop by clicking on it's icon on the desktop: Using MPutty on your Remote Desktop session, initiate a SSH session to the vManage with IP address of 198.18.134.50 . You can use credentials of admin and admin for authentication. If prompted for \"Putty Security Alert\" then Trust the host by clicking \"Yes\" on dialog box. The SSH credentials (username and password) are admin and admin respectively Note: If admin/admin credentials do not work then you may try using cisco/cisco or cisco1/cisco1 On the SSH connection, execute below command to view the VPN 0 related configurations on vManage: show run vpn 0 Apply vBond IP address on vManage by executing below command; config t vpn 0 host vbond.cisco.com ip 10.0.0.10 commit and-quit Step 3: Changing vBond IP Address on vSmart and Exploring vSmart Launch Mputty application from the Remote desktop by clicking on it's icon on the desktop: Using MPutty on your Remote Desktop session, initiate a SSH session to the vManage with IP address of 198.18.134.51 . You can use credentials of admin and admin for authentication. If prompted for \"Putty Security Alert\" then Trust the host by clicking \"Yes\" on dialog box. The SSH credentials (username and password) are admin and admin respectively Note: If admin/admin credentials do not work then you may try using cisco/cisco or cisco1/cisco1 On the SSH connection, execute below command to view the VPN 0 related configurations on vManage: show run vpn 0 Apply vBond IP address on vManage by executing below command; config t vpn 0 host vbond.cisco.com ip 10.0.0.10 commit and-quit You may also execute show run command to view the full configuration of vSmart Run the below commands to verify that certificate has been installed and view the details of certificate respectively show certificate serial show certificate installed Below screenshot shows the partial output of the above command. Run the below command to see the list of control connections of vSmart show control connections From the above output you can: confirm that State of control plane connection to vManage is up confirm that State of control plane connections to vBond are up Step 4: Exploring vBond Launch Mputty application from the Remote desktop by clicking on it's icon on the desktop to initiate a SSH session to the vBond . You can use credentials of admin and admin for authentication. If prompted for \"Putty Security Alert\" then Trust the host by clicking \"Yes\" on dialog box. The SSH credentials (username and password) are admin and admin respectively Note : If admin/admin credentials do not work then you may try using cisco/cisco or cisco1/cisco1 On the SSH connection, execute the below command to verify that system related configurations on vSmart: show run system As shown in the partial output in the below screenshot, the vSmart has been pre-configured with below system related configurations: * hostname * system-ip * organization name * vBond private IP of 10.0.0.10 You may also execute show run command to view the full configuration of vBond Run the below commands to verify that certificate has been installed and view the details of certificate respectively show certificate serial show certificate installed Below screenshot shows the partial output of the above command. This concludes the process to explore SDWAN Control Plane (vManage GUI, vSmart and vBond) and change vBond IP address on vManage and vSmart.","title":"Task 2 Control Plane"},{"location":"Task2-Exploring%20Control%20Plane/#exploring-sdwan-control-plane-vmanage-gui-vsmart-and-vbond","text":"This task will walk through the steps to explore vManage GUI, vBond and VSmart configurations Pre-requisite: Remote Desktop (RDP) session has to be established on RDP client already. You will use RDP client to connect to SDWAN controllers. If RDP session is not operational then please complete the previous Tasks first.","title":"Exploring SDWAN Control Plane (vManage GUI, vSmart and vBond)"},{"location":"Task2-Exploring%20Control%20Plane/#step-1-exploring-vmanage-gui","text":"In this step we will explore vManage GUI. vManage is a centralized network management system that provides a GUI interface to easily collect data from managed devices, present statistics, host troubleshooting tools, and manage configurations for all devices, templates, and policies. Once you connect to the remote workstation with Remote Desktop (RDP) client; then run Chrome by clicking its shortcut on the Desktop to access vManage GUI. Log on to the vManage using credentials of admin and admin Note: If admin/admin credentials do not work then you may try using cisco/cisco or cisco1/cisco1 The vManage dashboard will be displayed. The dashboard provides a quick summary of the network. At the top, a status indicating reachability will be displayed for any vSmart controllers, vEdge routers, and vBond orchestrators that are installed and have been added to vManage. Here, at a glance, you can view the health of the entire network including the operational state of any device, total number of reboots and crashes, and the state of all controller certificates. This visibility into the network eases the task of managing the SDWAN devices. The number of controllers will be shown with a green up arrow (indicating reachable), or a red down arrow (indicating unreachable). Note: On the next steps, we will verify the controllers are all showing up before moving on to the next task. The menu is located to the left of the Dashboard screen. The following lists each menu and sub-menu item and provides a brief description. Monitor Geography: A map view of the entire network and displays the geographic location of the devices in the network. Network: An inventory of all SDWAN devices in the network along with detailed information on each device. Alarms: Details on alarms generated by all SDWAN devices in the network. Events: Details on events generated by all SDWAN devices in the network. Audit Log: An audit log of all activities on SDWAN devices. ACL Log: System log messages related to access lists (ACLs) configured on a vEdge router. Configuration Devices: Add or delete devices from the overlay network. Certificates: Manage certificates and authenticate Viptela devices in the overlay network. Templates: Create configuration templates for a set of Viptela devices. Policy: Create common policies for a set of vSmart controllers. Security: Create and activate zone-based firewalls vEdge routers Cloud onRamp for SaaS: Optimize access to cloud applications from Direct Internet Access (DIA) nodes in the overlay network. Cloud onRamp for IaaS: Extends SDWAN overlay network into public cloud instances. Create virtual private cloud (VPC) instances for hosting vEdge Cloud routers in the public internet. Tools SSH Terminal: Establish an SSH session to a SDWAN device. Rediscover Network: Locate new devices in the overlay network and synchronize them with the vManage NMS. Operational Commands: Run two or more operational commands as a single command. Maintenance Software Repository: Software Upgrade: Download new software images and upgrade the software image running on SDWAN devices. Device Reboot: Reboot one or more SDWAN devices. Administration Settings: Configure organization name and certificate authorization settings. Manage Users: Add, edit, or delete users and user groups from the vManage NMS. Cluster Management: Create and manage a vManage NMS cluster. vAnalytics Launch vAnalytics: View, at a glance, the performance and availability of the Viptela overlay network, including metrics for carriers, tunnels, and applications.","title":"Step 1: Exploring vManage GUI"},{"location":"Task2-Exploring%20Control%20Plane/#step-2-assign-vbond-ip-address-on-vmanage","text":"In this step, you will change vBond IP Address on vManage. Launch Mputty application from the Remote desktop by clicking on it's icon on the desktop: Using MPutty on your Remote Desktop session, initiate a SSH session to the vManage with IP address of 198.18.134.50 . You can use credentials of admin and admin for authentication. If prompted for \"Putty Security Alert\" then Trust the host by clicking \"Yes\" on dialog box. The SSH credentials (username and password) are admin and admin respectively Note: If admin/admin credentials do not work then you may try using cisco/cisco or cisco1/cisco1 On the SSH connection, execute below command to view the VPN 0 related configurations on vManage: show run vpn 0 Apply vBond IP address on vManage by executing below command; config t vpn 0 host vbond.cisco.com ip 10.0.0.10 commit and-quit","title":"Step 2: Assign vBond IP Address on vManage"},{"location":"Task2-Exploring%20Control%20Plane/#step-3-changing-vbond-ip-address-on-vsmart-and-exploring-vsmart","text":"Launch Mputty application from the Remote desktop by clicking on it's icon on the desktop: Using MPutty on your Remote Desktop session, initiate a SSH session to the vManage with IP address of 198.18.134.51 . You can use credentials of admin and admin for authentication. If prompted for \"Putty Security Alert\" then Trust the host by clicking \"Yes\" on dialog box. The SSH credentials (username and password) are admin and admin respectively Note: If admin/admin credentials do not work then you may try using cisco/cisco or cisco1/cisco1 On the SSH connection, execute below command to view the VPN 0 related configurations on vManage: show run vpn 0 Apply vBond IP address on vManage by executing below command; config t vpn 0 host vbond.cisco.com ip 10.0.0.10 commit and-quit You may also execute show run command to view the full configuration of vSmart Run the below commands to verify that certificate has been installed and view the details of certificate respectively show certificate serial show certificate installed Below screenshot shows the partial output of the above command. Run the below command to see the list of control connections of vSmart show control connections From the above output you can: confirm that State of control plane connection to vManage is up confirm that State of control plane connections to vBond are up","title":"Step 3: Changing vBond IP Address on vSmart and Exploring vSmart"},{"location":"Task2-Exploring%20Control%20Plane/#step-4-exploring-vbond","text":"Launch Mputty application from the Remote desktop by clicking on it's icon on the desktop to initiate a SSH session to the vBond . You can use credentials of admin and admin for authentication. If prompted for \"Putty Security Alert\" then Trust the host by clicking \"Yes\" on dialog box. The SSH credentials (username and password) are admin and admin respectively Note : If admin/admin credentials do not work then you may try using cisco/cisco or cisco1/cisco1 On the SSH connection, execute the below command to verify that system related configurations on vSmart: show run system As shown in the partial output in the below screenshot, the vSmart has been pre-configured with below system related configurations: * hostname * system-ip * organization name * vBond private IP of 10.0.0.10 You may also execute show run command to view the full configuration of vBond Run the below commands to verify that certificate has been installed and view the details of certificate respectively show certificate serial show certificate installed Below screenshot shows the partial output of the above command. This concludes the process to explore SDWAN Control Plane (vManage GUI, vSmart and vBond) and change vBond IP address on vManage and vSmart.","title":"Step 4: Exploring vBond"},{"location":"Task3-vEdge/","text":"This task will walk through the steps to add vEdges to the SD-WAN environment. Pre-requisite: SDWAN controllers must be fully operational. If those are not installed (or operational) then please complete the previous Tasks first. Step 1: Configure vEdge in Branch-1 Note: Pictures added to the Lab guide is reference only. Actual IPs will be different in the POD In this step we will SSH to the vEdge in Branch1 (BR1) and verify that it has established connection to the Control Plane. Launch Mputty application from the Remote desktop by clicking on it's icon on the desktop: Using MTPutty on your Remote Desktop session, initiate a SSH session to the BR1-vEdge with IP address of 198.18.134.46 this vEdge ( BR1-vEdge01 ). You can use credentials of admin and admin for authentication. If prompted for \"Putty Security Alert\" then Trust the host by clicking \"Yes\" on dialog box. The SSH credentials (username and password) are admin and admin respectively Note: If admin/admin credentials do not work then you may try using cisco/cisco or cisco1/cisco1 Apply the below configs for vEge Branch-1 system host-name BR1-vEdge01 system-ip 172.16.102.1 site-id 101 admin-tech-on-failure no route-consistency-check sp-organization-name MEA_KSA_LABS organization-name MEA_KSA_LABS upgrade-confirm 15 vbond 10.0.0.10 ! vpn 0 interface ge0/0 ip address 10.100.101.1/30 tunnel-interface encapsulation ipsec no allow-service bgp allow-service dhcp allow-service dns allow-service icmp no allow-service sshd no allow-service netconf no allow-service ntp no allow-service ospf no allow-service stun allow-service https ! no shutdown ! interface ge0/1 ip address 10.100.101.5/30 tunnel-interface encapsulation ipsec color private1 no allow-service bgp allow-service dhcp allow-service dns allow-service icmp no allow-service sshd no allow-service netconf no allow-service ntp no allow-service ospf no allow-service stun allow-service https ! no shutdown ! ip route 0.0.0.0/0 10.100.101.2 ip route 0.0.0.0/0 10.100.101.6 Execute commit Execute the below command to verify that system related configurations on this vEdge: show run system Execute the below command to see the configuration related to WAN connections or Transport connections on this vEdge. In Cisco SD-WAN, VPN 0 is allocated for Transport/WAN links: show run vpn 0 Below screenshot shows the partial output of this command. This command will confirm that: vEdge has two WAN links (under VPN 0) as per interface ge0/0 & ge0/1 configurations, default routes are configured for both links, Each WAN link is also configured with appropriate color tag: Note: This color tag is used to set up the appropriate IPSec tunnels. With restrict option, IPSec tunnels between vEdges that have MPLS color will be created. You may also execute show run command to view the full configuration of this vEdge Run the below commands to verify that certificate has been installed and view the details of certificate respectively show certificate serial show certificate installed Below screenshot shows the partial output of the above command. Run the below command to see the list of control connections of this vEdge to the Control Plane (vManage, vSmart) show control connections Below screenshot shows the output of this command. Note it validates that vEdge has: Two (2) control connections established to vSmart Controller One (1) control connection established to vManage In addition to option of configuring a vEdge using local CLI, centralized configuration/management of vEdges can be done from the vManage using \"CLI Template\" or \"Feature Template\". Create a CLI template for Branch-1 vEdge. On the vManage GUI, navigate to Configuration > Templates . Under Devices tab click Create Template and then select CLI Template as shown in the below screenshot: Next, from the Device Model dropdown menu select vEdge-Cloud Enter Template Name of BR1-vEdge01 Enter Description of Branch-1 vEdge1 configs In the CLI Configuration section copy and paste the below configs: system host-name BR1-vEdge01 system-ip 172.16.102.1 site-id 101 admin-tech-on-failure no route-consistency-check sp-organization-name MEA_KSA_LABS organization-name MEA_KSA_LABS upgrade-confirm 15 vbond 10.0.0.10 ! vpn 0 interface ge0/0 ip address 10.100.101.1/30 tunnel-interface encapsulation ipsec no allow-service bgp allow-service dhcp allow-service dns allow-service icmp no allow-service sshd no allow-service netconf no allow-service ntp no allow-service ospf no allow-service stun allow-service https ! no shutdown ! interface ge0/1 ip address 10.100.101.5/30 tunnel-interface encapsulation ipsec color private1 no allow-service bgp allow-service dhcp allow-service dns allow-service icmp no allow-service sshd no allow-service netconf no allow-service ntp no allow-service ospf no allow-service stun allow-service https ! no shutdown ! ip route 0.0.0.0/0 10.100.101.2 ip route 0.0.0.0/0 10.100.101.6 ! vpn 512 interface eth0 ip address 198.18.134.46/18 ipv6 dhcp-client no shutdown ! ip route 0.0.0.0/0 198.18.128.1 ! Note: Pictures added to the Lab guide is showing branch-2 but the procedure is same for adding any vEdge to template Next Click the Add button at the bottom of page as shown in the below screenshot: On the next screen, verify that this Template has been added successfully Now let's attach vEdge in Branch 1 to this newly created CLI Template. On the vManage GUI, Configuration > Templates section: Click on the newly created Template named: BR1-vEdge01 Then Click the three dots ... on the right side of this Template and Select Attach Devices option from the drop down menu as shown in the below screenshot: On the Attach Devices window: Under the Available Devices tab, Click on BR1-vEdge01 (with Device IP of 172.16.102.1 ) Click on the Right Arrow icon as shown in below screenshot. At this point the vEdge should move to the Selected Devices tab Click on the Attach button as shown in below screenshot On the next screen, Click on BR1-vEdge01 left section and Click on Config Preview and Config Diff options on the right side of window to confirm correct configurations are pushed to this BR1-vEdge01. Below screenshot shows \"Config Preview\" confirming that correct VPN 512 configs are being pushed to BR1-vEdge: Next Click on the Configure Devices button on bottom of the screen. On the subsequent screen verify that the template is attached successfully to BR1-vEdge01 On the Mputty client with SSH session to BR1-vEdge verify that template is successfully attached by running below command : show system status The output of above command should show that it is is centrally configured by vManage and also provides the name of Template: vManaged: true Configuration template: BR1-vEdge01 Below screenshot shows the partial output of above command: Step 2: Configure vEdge in Branch-2 Follows the same procedure to configure vEdge in branch 2. Using MTPutty on your Remote Desktop session, initiate a SSH session to the BR1-vEdge with IP address of 198.18.134.49 this vEdge ( BR2-vEdge01 ). You can use credentials of admin and admin for authentication. If prompted for \"Putty Security Alert\" then Trust the host by clicking \"Yes\" on dialog box. The SSH credentials (username and password) are admin and admin respectively Important Note: Be very careful in making configuration changes on vEdge. Do NOT change any configuration of VPN 512 as it can result in loss of connectivity to the vEdge - which can not be restored. You will have to start the lab again from Task #1 if you loose network connectivity to a vEdge. Apply the connfig config for BR2-vEdge01 system host-name BR2-vEdge01 system-ip 172.16.103.1 site-id 102 admin-tech-on-failure no route-consistency-check sp-organization-name MEA_KSA_LABS organization-name MEA_KSA_LABS vbond 10.0.0.10 ! vpn 0 interface ge0/0 ip address 10.200.203.1/30 tunnel-interface encapsulation ipsec no allow-service bgp allow-service dhcp allow-service dns allow-service icmp no allow-service sshd no allow-service netconf no allow-service ntp no allow-service ospf no allow-service stun allow-service https ! no shutdown ! interface ge0/1 ip address 10.200.203.5/30 tunnel-interface encapsulation ipsec color private1 no allow-service bgp allow-service dhcp allow-service dns allow-service icmp no allow-service sshd no allow-service netconf no allow-service ntp no allow-service ospf no allow-service stun allow-service https ! no shutdown ! ip route 0.0.0.0/0 10.200.203.2 ip route 0.0.0.0/0 10.200.203.6 ! On the vManage GUI, navigate to Configuration > Templates . Under Devices tab click Create Template and then select CLI Template as shown in the below screenshot: Next, from the Device Model dropdown menu select vEdge-Cloud Enter Template Name of BR2-vEdge01 Enter Description of Branch2 vEdge1 configs In the CLI Configuration section copy and paste the below configs: system host-name BR2-vEdge01 system-ip 172.16.103.1 site-id 102 admin-tech-on-failure no route-consistency-check sp-organization-name MEA_KSA_LABS organization-name MEA_KSA_LABS vbond 10.0.0.10 ! vpn 0 interface ge0/0 ip address 10.200.203.1/30 tunnel-interface encapsulation ipsec no allow-service bgp allow-service dhcp allow-service dns allow-service icmp no allow-service sshd no allow-service netconf no allow-service ntp no allow-service ospf no allow-service stun allow-service https ! no shutdown ! interface ge0/1 ip address 10.200.203.5/30 tunnel-interface encapsulation ipsec color private1 no allow-service bgp allow-service dhcp allow-service dns allow-service icmp no allow-service sshd no allow-service netconf no allow-service ntp no allow-service ospf no allow-service stun allow-service https ! no shutdown ! ip route 0.0.0.0/0 10.200.203.2 ip route 0.0.0.0/0 10.200.203.6 ! vpn 512 interface eth0 ip address 198.18.134.49/18 ipv6 dhcp-client no shutdown ! ip route 0.0.0.0/0 198.18.128.1 ! Next Click the Add button at the bottom of page as shown in the below screenshot: On the next screen, verify that this Template has been added successfully Now let's attach vEdge in Branch 2 to this newly created CLI Template. On the vManage GUI, Configuration > Templates section: Click on the newly created Template named: CL-BR2-vEdge1 Then Click the three dots ... on the right side of this Template and Select Attach Devices option from the drop down menu as shown in the below screenshot: On the Attach Devices window: Under the Available Devices tab, Click on BR2-vEdge (with Device IP of 172.16.102.1 ) Click on the Right Arrow icon as shown in below screenshot. At this point the vEdge should move to the Selected Devices tab Click on the Attach button as shown in below screenshot On the next screen, Click on BR2-vEdge01 left section and Click on Config Preview and Config Diff options on the right side of window to confirm correct configurations are pushed to this BR2-vEdge01. Below screenshot shows \"Config Preview\" confirming that correct VPN 512 configs are being pushed to BR2-vEdge: Next Click on the Configure Devices button on bottom of the screen. On the subsequent screen verify that the template is attached successfully to BR2-vEdge From the Mputty client initiate SSH session to BR2-vEdge01 and verify that template is successfully attached by issuing below command: show system status The output of above command should show: vManaged = true Configuration template: BR2-vEdge01 Below screenshot shows the output of above command confirming that template is attached successfully: Verify vEdge in branch-2 show interface show ip route show control connections show run Step 3: Adding vEdge in Data Center (DC) Follow the same procedure and add vEdge in DC site. Using MTPutty on your Remote Desktop session, initiate a SSH session to the DC-vEdge01 with IP address of 198.18.134.47 this vEdge ( DC-vEdge01 ). You can use credentials of admin and admin for authentication. If prompted for \"Putty Security Alert\" then Trust the host by clicking \"Yes\" on dialog box. The SSH credentials (username and password) are admin and admin respectively Important Note: Be very careful in making configuration changes on vEdge. Do NOT change any configuration of VPN 512 as it can result in loss of connectivity to the vEdge - which can not be restored. You will have to start the lab again from Task #1 if you loose network connectivity to a vEdge. Apply below configs system host-name DC-vEdge01 system-ip 172.16.101.1 site-id 100 admin-tech-on-failure no route-consistency-check sp-organization-name MEA_KSA_LABS organization-name MEA_KSA_LABS vbond 10.0.0.10 ! vpn 0 interface ge0/0 ip address 10.100.103.1/30 ipv6 dhcp-client tunnel-interface encapsulation ipsec no allow-service bgp allow-service dhcp allow-service dns allow-service icmp allow-service sshd allow-service netconf no allow-service ntp no allow-service ospf no allow-service stun allow-service https ! no shutdown ! interface ge0/1 ip address 10.100.103.5/30 tunnel-interface encapsulation ipsec color private1 no allow-service bgp allow-service dhcp allow-service dns allow-service icmp allow-service sshd allow-service netconf no allow-service ntp no allow-service ospf no allow-service stun allow-service https ! no shutdown ! ip route 0.0.0.0/0 10.100.103.2 ip route 0.0.0.0/0 10.100.103.6 On the vManage GUI, navigate to Configuration > Templates . Under Devices tab click Create Template and then select CLI Template as shown in the below screenshot: Next, from the Device Model dropdown menu select vEdge-Cloud Enter Template Name of DC-vEdge01 Enter Description of DC vEdge1 In the CLI Configuration section copy and paste the below configs: system host-name DC-vEdge01 system-ip 172.16.101.1 site-id 100 admin-tech-on-failure no route-consistency-check sp-organization-name MEA_KSA_LABS organization-name MEA_KSA_LABS vbond 10.0.0.10 ! vpn 0 interface ge0/0 ip address 10.100.103.1/30 ipv6 dhcp-client tunnel-interface encapsulation ipsec no allow-service bgp allow-service dhcp allow-service dns allow-service icmp allow-service sshd allow-service netconf no allow-service ntp no allow-service ospf no allow-service stun allow-service https ! no shutdown ! interface ge0/1 ip address 10.100.103.5/30 tunnel-interface encapsulation ipsec color private1 no allow-service bgp allow-service dhcp allow-service dns allow-service icmp allow-service sshd allow-service netconf no allow-service ntp no allow-service ospf no allow-service stun allow-service https ! no shutdown ! ip route 0.0.0.0/0 10.100.103.2 ip route 0.0.0.0/0 10.100.103.6 ! vpn 512 interface eth0 ip address 198.18.134.47/18 ipv6 dhcp-client no shutdown ! ip route 0.0.0.0/0 198.18.128.1 Next Click the Add button as shown in the below screenshot: On the screen, verify that this Template has been added successfully Now let's attach vEdge in DC to this newly created CLI Template to appropriate. On the vManage GUI, Configuration > Templates section: Click on the newly created Template named: DC-vEdge01 Then Click the three dots ... on the right side of this Template and Select Attach Devices option from the drop down menu as shown in the below screenshot: On the Attach Devices window: Under the Available Devices tab, Click on DC1-vEdge01 (with Device IP of 172.16.101.1 ) Click on the Right Arrow icon as shown in below screenshot. At this point the vEdge should move to the Selected Devices tab Click on the Attach button as shown in below screenshot On the next screen, Click on DC1-vEdge01 left section and Click on Config Preview and Config Diff options on the right side of window to confirm correct configurations are pushed to this DC1-VEDGE1. Important Note: Be very careful in making configuration changes on vEdge. Do NOT change any configuration of VPN 512 as it can result in loss of connectivity to the vEdge - which can not be restored. You will have to start the lab again from Task #1 if you loose network connectivity to a vEdge. Next Click on the Configure Devices button on bottom of the screen. On the subsequent screen verify that the template is attached successfully to DC1-vEdge Note: you may get a message that Device is offline. You can ignore this for now and proceed further This concludes the process to onboard the three (3) vEdge-Cloud devices in SDWAN Fabric Verify Data Cente vEdge show interface show ip route show control connections show run","title":"Task 3 vEdge on internal networks"},{"location":"Task3-vEdge/#step-1-configure-vedge-in-branch-1","text":"Note: Pictures added to the Lab guide is reference only. Actual IPs will be different in the POD In this step we will SSH to the vEdge in Branch1 (BR1) and verify that it has established connection to the Control Plane. Launch Mputty application from the Remote desktop by clicking on it's icon on the desktop: Using MTPutty on your Remote Desktop session, initiate a SSH session to the BR1-vEdge with IP address of 198.18.134.46 this vEdge ( BR1-vEdge01 ). You can use credentials of admin and admin for authentication. If prompted for \"Putty Security Alert\" then Trust the host by clicking \"Yes\" on dialog box. The SSH credentials (username and password) are admin and admin respectively Note: If admin/admin credentials do not work then you may try using cisco/cisco or cisco1/cisco1 Apply the below configs for vEge Branch-1 system host-name BR1-vEdge01 system-ip 172.16.102.1 site-id 101 admin-tech-on-failure no route-consistency-check sp-organization-name MEA_KSA_LABS organization-name MEA_KSA_LABS upgrade-confirm 15 vbond 10.0.0.10 ! vpn 0 interface ge0/0 ip address 10.100.101.1/30 tunnel-interface encapsulation ipsec no allow-service bgp allow-service dhcp allow-service dns allow-service icmp no allow-service sshd no allow-service netconf no allow-service ntp no allow-service ospf no allow-service stun allow-service https ! no shutdown ! interface ge0/1 ip address 10.100.101.5/30 tunnel-interface encapsulation ipsec color private1 no allow-service bgp allow-service dhcp allow-service dns allow-service icmp no allow-service sshd no allow-service netconf no allow-service ntp no allow-service ospf no allow-service stun allow-service https ! no shutdown ! ip route 0.0.0.0/0 10.100.101.2 ip route 0.0.0.0/0 10.100.101.6 Execute commit Execute the below command to verify that system related configurations on this vEdge: show run system Execute the below command to see the configuration related to WAN connections or Transport connections on this vEdge. In Cisco SD-WAN, VPN 0 is allocated for Transport/WAN links: show run vpn 0 Below screenshot shows the partial output of this command. This command will confirm that: vEdge has two WAN links (under VPN 0) as per interface ge0/0 & ge0/1 configurations, default routes are configured for both links, Each WAN link is also configured with appropriate color tag: Note: This color tag is used to set up the appropriate IPSec tunnels. With restrict option, IPSec tunnels between vEdges that have MPLS color will be created. You may also execute show run command to view the full configuration of this vEdge Run the below commands to verify that certificate has been installed and view the details of certificate respectively show certificate serial show certificate installed Below screenshot shows the partial output of the above command. Run the below command to see the list of control connections of this vEdge to the Control Plane (vManage, vSmart) show control connections Below screenshot shows the output of this command. Note it validates that vEdge has: Two (2) control connections established to vSmart Controller One (1) control connection established to vManage In addition to option of configuring a vEdge using local CLI, centralized configuration/management of vEdges can be done from the vManage using \"CLI Template\" or \"Feature Template\". Create a CLI template for Branch-1 vEdge. On the vManage GUI, navigate to Configuration > Templates . Under Devices tab click Create Template and then select CLI Template as shown in the below screenshot: Next, from the Device Model dropdown menu select vEdge-Cloud Enter Template Name of BR1-vEdge01 Enter Description of Branch-1 vEdge1 configs In the CLI Configuration section copy and paste the below configs: system host-name BR1-vEdge01 system-ip 172.16.102.1 site-id 101 admin-tech-on-failure no route-consistency-check sp-organization-name MEA_KSA_LABS organization-name MEA_KSA_LABS upgrade-confirm 15 vbond 10.0.0.10 ! vpn 0 interface ge0/0 ip address 10.100.101.1/30 tunnel-interface encapsulation ipsec no allow-service bgp allow-service dhcp allow-service dns allow-service icmp no allow-service sshd no allow-service netconf no allow-service ntp no allow-service ospf no allow-service stun allow-service https ! no shutdown ! interface ge0/1 ip address 10.100.101.5/30 tunnel-interface encapsulation ipsec color private1 no allow-service bgp allow-service dhcp allow-service dns allow-service icmp no allow-service sshd no allow-service netconf no allow-service ntp no allow-service ospf no allow-service stun allow-service https ! no shutdown ! ip route 0.0.0.0/0 10.100.101.2 ip route 0.0.0.0/0 10.100.101.6 ! vpn 512 interface eth0 ip address 198.18.134.46/18 ipv6 dhcp-client no shutdown ! ip route 0.0.0.0/0 198.18.128.1 ! Note: Pictures added to the Lab guide is showing branch-2 but the procedure is same for adding any vEdge to template Next Click the Add button at the bottom of page as shown in the below screenshot: On the next screen, verify that this Template has been added successfully Now let's attach vEdge in Branch 1 to this newly created CLI Template. On the vManage GUI, Configuration > Templates section: Click on the newly created Template named: BR1-vEdge01 Then Click the three dots ... on the right side of this Template and Select Attach Devices option from the drop down menu as shown in the below screenshot: On the Attach Devices window: Under the Available Devices tab, Click on BR1-vEdge01 (with Device IP of 172.16.102.1 ) Click on the Right Arrow icon as shown in below screenshot. At this point the vEdge should move to the Selected Devices tab Click on the Attach button as shown in below screenshot On the next screen, Click on BR1-vEdge01 left section and Click on Config Preview and Config Diff options on the right side of window to confirm correct configurations are pushed to this BR1-vEdge01. Below screenshot shows \"Config Preview\" confirming that correct VPN 512 configs are being pushed to BR1-vEdge: Next Click on the Configure Devices button on bottom of the screen. On the subsequent screen verify that the template is attached successfully to BR1-vEdge01 On the Mputty client with SSH session to BR1-vEdge verify that template is successfully attached by running below command : show system status The output of above command should show that it is is centrally configured by vManage and also provides the name of Template: vManaged: true Configuration template: BR1-vEdge01 Below screenshot shows the partial output of above command:","title":"Step 1: Configure vEdge in Branch-1"},{"location":"Task3-vEdge/#step-2-configure-vedge-in-branch-2","text":"Follows the same procedure to configure vEdge in branch 2. Using MTPutty on your Remote Desktop session, initiate a SSH session to the BR1-vEdge with IP address of 198.18.134.49 this vEdge ( BR2-vEdge01 ). You can use credentials of admin and admin for authentication. If prompted for \"Putty Security Alert\" then Trust the host by clicking \"Yes\" on dialog box. The SSH credentials (username and password) are admin and admin respectively Important Note: Be very careful in making configuration changes on vEdge. Do NOT change any configuration of VPN 512 as it can result in loss of connectivity to the vEdge - which can not be restored. You will have to start the lab again from Task #1 if you loose network connectivity to a vEdge. Apply the connfig config for BR2-vEdge01 system host-name BR2-vEdge01 system-ip 172.16.103.1 site-id 102 admin-tech-on-failure no route-consistency-check sp-organization-name MEA_KSA_LABS organization-name MEA_KSA_LABS vbond 10.0.0.10 ! vpn 0 interface ge0/0 ip address 10.200.203.1/30 tunnel-interface encapsulation ipsec no allow-service bgp allow-service dhcp allow-service dns allow-service icmp no allow-service sshd no allow-service netconf no allow-service ntp no allow-service ospf no allow-service stun allow-service https ! no shutdown ! interface ge0/1 ip address 10.200.203.5/30 tunnel-interface encapsulation ipsec color private1 no allow-service bgp allow-service dhcp allow-service dns allow-service icmp no allow-service sshd no allow-service netconf no allow-service ntp no allow-service ospf no allow-service stun allow-service https ! no shutdown ! ip route 0.0.0.0/0 10.200.203.2 ip route 0.0.0.0/0 10.200.203.6 ! On the vManage GUI, navigate to Configuration > Templates . Under Devices tab click Create Template and then select CLI Template as shown in the below screenshot: Next, from the Device Model dropdown menu select vEdge-Cloud Enter Template Name of BR2-vEdge01 Enter Description of Branch2 vEdge1 configs In the CLI Configuration section copy and paste the below configs: system host-name BR2-vEdge01 system-ip 172.16.103.1 site-id 102 admin-tech-on-failure no route-consistency-check sp-organization-name MEA_KSA_LABS organization-name MEA_KSA_LABS vbond 10.0.0.10 ! vpn 0 interface ge0/0 ip address 10.200.203.1/30 tunnel-interface encapsulation ipsec no allow-service bgp allow-service dhcp allow-service dns allow-service icmp no allow-service sshd no allow-service netconf no allow-service ntp no allow-service ospf no allow-service stun allow-service https ! no shutdown ! interface ge0/1 ip address 10.200.203.5/30 tunnel-interface encapsulation ipsec color private1 no allow-service bgp allow-service dhcp allow-service dns allow-service icmp no allow-service sshd no allow-service netconf no allow-service ntp no allow-service ospf no allow-service stun allow-service https ! no shutdown ! ip route 0.0.0.0/0 10.200.203.2 ip route 0.0.0.0/0 10.200.203.6 ! vpn 512 interface eth0 ip address 198.18.134.49/18 ipv6 dhcp-client no shutdown ! ip route 0.0.0.0/0 198.18.128.1 ! Next Click the Add button at the bottom of page as shown in the below screenshot: On the next screen, verify that this Template has been added successfully Now let's attach vEdge in Branch 2 to this newly created CLI Template. On the vManage GUI, Configuration > Templates section: Click on the newly created Template named: CL-BR2-vEdge1 Then Click the three dots ... on the right side of this Template and Select Attach Devices option from the drop down menu as shown in the below screenshot: On the Attach Devices window: Under the Available Devices tab, Click on BR2-vEdge (with Device IP of 172.16.102.1 ) Click on the Right Arrow icon as shown in below screenshot. At this point the vEdge should move to the Selected Devices tab Click on the Attach button as shown in below screenshot On the next screen, Click on BR2-vEdge01 left section and Click on Config Preview and Config Diff options on the right side of window to confirm correct configurations are pushed to this BR2-vEdge01. Below screenshot shows \"Config Preview\" confirming that correct VPN 512 configs are being pushed to BR2-vEdge: Next Click on the Configure Devices button on bottom of the screen. On the subsequent screen verify that the template is attached successfully to BR2-vEdge From the Mputty client initiate SSH session to BR2-vEdge01 and verify that template is successfully attached by issuing below command: show system status The output of above command should show: vManaged = true Configuration template: BR2-vEdge01 Below screenshot shows the output of above command confirming that template is attached successfully: Verify vEdge in branch-2 show interface show ip route show control connections show run","title":"Step 2: Configure vEdge in Branch-2"},{"location":"Task3-vEdge/#step-3-adding-vedge-in-data-center-dc","text":"Follow the same procedure and add vEdge in DC site. Using MTPutty on your Remote Desktop session, initiate a SSH session to the DC-vEdge01 with IP address of 198.18.134.47 this vEdge ( DC-vEdge01 ). You can use credentials of admin and admin for authentication. If prompted for \"Putty Security Alert\" then Trust the host by clicking \"Yes\" on dialog box. The SSH credentials (username and password) are admin and admin respectively Important Note: Be very careful in making configuration changes on vEdge. Do NOT change any configuration of VPN 512 as it can result in loss of connectivity to the vEdge - which can not be restored. You will have to start the lab again from Task #1 if you loose network connectivity to a vEdge. Apply below configs system host-name DC-vEdge01 system-ip 172.16.101.1 site-id 100 admin-tech-on-failure no route-consistency-check sp-organization-name MEA_KSA_LABS organization-name MEA_KSA_LABS vbond 10.0.0.10 ! vpn 0 interface ge0/0 ip address 10.100.103.1/30 ipv6 dhcp-client tunnel-interface encapsulation ipsec no allow-service bgp allow-service dhcp allow-service dns allow-service icmp allow-service sshd allow-service netconf no allow-service ntp no allow-service ospf no allow-service stun allow-service https ! no shutdown ! interface ge0/1 ip address 10.100.103.5/30 tunnel-interface encapsulation ipsec color private1 no allow-service bgp allow-service dhcp allow-service dns allow-service icmp allow-service sshd allow-service netconf no allow-service ntp no allow-service ospf no allow-service stun allow-service https ! no shutdown ! ip route 0.0.0.0/0 10.100.103.2 ip route 0.0.0.0/0 10.100.103.6 On the vManage GUI, navigate to Configuration > Templates . Under Devices tab click Create Template and then select CLI Template as shown in the below screenshot: Next, from the Device Model dropdown menu select vEdge-Cloud Enter Template Name of DC-vEdge01 Enter Description of DC vEdge1 In the CLI Configuration section copy and paste the below configs: system host-name DC-vEdge01 system-ip 172.16.101.1 site-id 100 admin-tech-on-failure no route-consistency-check sp-organization-name MEA_KSA_LABS organization-name MEA_KSA_LABS vbond 10.0.0.10 ! vpn 0 interface ge0/0 ip address 10.100.103.1/30 ipv6 dhcp-client tunnel-interface encapsulation ipsec no allow-service bgp allow-service dhcp allow-service dns allow-service icmp allow-service sshd allow-service netconf no allow-service ntp no allow-service ospf no allow-service stun allow-service https ! no shutdown ! interface ge0/1 ip address 10.100.103.5/30 tunnel-interface encapsulation ipsec color private1 no allow-service bgp allow-service dhcp allow-service dns allow-service icmp allow-service sshd allow-service netconf no allow-service ntp no allow-service ospf no allow-service stun allow-service https ! no shutdown ! ip route 0.0.0.0/0 10.100.103.2 ip route 0.0.0.0/0 10.100.103.6 ! vpn 512 interface eth0 ip address 198.18.134.47/18 ipv6 dhcp-client no shutdown ! ip route 0.0.0.0/0 198.18.128.1 Next Click the Add button as shown in the below screenshot: On the screen, verify that this Template has been added successfully Now let's attach vEdge in DC to this newly created CLI Template to appropriate. On the vManage GUI, Configuration > Templates section: Click on the newly created Template named: DC-vEdge01 Then Click the three dots ... on the right side of this Template and Select Attach Devices option from the drop down menu as shown in the below screenshot: On the Attach Devices window: Under the Available Devices tab, Click on DC1-vEdge01 (with Device IP of 172.16.101.1 ) Click on the Right Arrow icon as shown in below screenshot. At this point the vEdge should move to the Selected Devices tab Click on the Attach button as shown in below screenshot On the next screen, Click on DC1-vEdge01 left section and Click on Config Preview and Config Diff options on the right side of window to confirm correct configurations are pushed to this DC1-VEDGE1. Important Note: Be very careful in making configuration changes on vEdge. Do NOT change any configuration of VPN 512 as it can result in loss of connectivity to the vEdge - which can not be restored. You will have to start the lab again from Task #1 if you loose network connectivity to a vEdge. Next Click on the Configure Devices button on bottom of the screen. On the subsequent screen verify that the template is attached successfully to DC1-vEdge Note: you may get a message that Device is offline. You can ignore this for now and proceed further This concludes the process to onboard the three (3) vEdge-Cloud devices in SDWAN Fabric Verify Data Cente vEdge show interface show ip route show control connections show run","title":"Step 3: Adding vEdge in Data Center (DC)"},{"location":"Task4-Full-Mesh/","text":"This task will walk through the steps to verify the full mesh VPN topology on the SD-WAN Fabric. As per previous steps of onboarding the vEdges has been performed. By default all the vEdges in SD-WAN Fabric will create a full mesh IPSec tunnels. Pre-requisite: SDWAN controllers and 3 vEdges (in Branches & DC) must be fully operational. If those are not installed (or not operational) then please complete the previous Tasks first. Step 1: Verify IPSec tunnels on BR1 You can launch SSH to vEdge in Branch-1 by using MPutty client on the Remote Desktop: SSH to OOB Management IP address of BR1-vEdge : 198.18.134.46 Use credentials of admin and admin for authentication Note: If admin/admin credentials do not work then you may try using cisco/cisco or cisco1/cisco1 On the SSH connection to vEdge, execute the below commands. At this stage no IP routes have been received over OMP by this vEdge, so you will see no output on the OMP routes command: show omp routes show ip route On the SSH connection to vEdge, execute the below commands to verify that IPSec tunnels are setup to remote vEdges. BFD is enabled by default on the IPSec tunnels: show bfd session show bfd session | tab Below screenshot shows the output of above command confirming that IPSec tunnels on both WAN links are setup to DC and BR2: Step 2: Verify IPSec tunnels on BR2 You can launch SSH to vEdge in Branch-2 by using MPutty client on the Remote Desktop: SSH to OOB Management IP address of BR2-vEdge : 198.18.134.49 Use credentials of admin and admin for authentication Note: If admin/admin credentials do not work then you may try using cisco/cisco or cisco1/cisco1 On the SSH connection to vEdge, execute the below commands to verify that OMP routes have been received by this vEdge: show omp routes show ip route On the SSH connection to vEdge, execute the below commands to verify that IPSec tunnels are setup to remote vEdges. BFD is enabled by default on the IPSec tunnels: show bfd session show bfd session | tab Below screenshot shows the output of above command confirming that IPSec tunnels on both WAN links are setup to DC and BR1: Step 3: Verify IPSec tunnels on DC You can launch SSH to vEdge on DC by using MTPutty client on the Remote Desktop: SSH to OOB Management IP address of DC1-VEDGE : 198.18.134.47 Use credentials of admin and admin for authentication Note: If admin/admin credentials do not work then you may try using cisco/cisco or cisco1/cisco1 On the SSH connection to vEdge, execute the below commands to verify that OMP routes have been received by this vEdge: show omp routes show ip route On the SSH connection to vEdge, execute the below commands to verify that IPSec tunnels are setup to remote vEdges. BFD is enabled by default on the IPSec tunnels: show bfd session show bfd session | tab Below screenshot shows the output of above command confirming that IPSec tunnels on both WAN links are setup to BR1 and BR2: This concludes this task to verify the full mesh topology","title":"Task 4 Full-Mesh Data Plane on internal networks"},{"location":"Task4-Full-Mesh/#step-1-verify-ipsec-tunnels-on-br1","text":"You can launch SSH to vEdge in Branch-1 by using MPutty client on the Remote Desktop: SSH to OOB Management IP address of BR1-vEdge : 198.18.134.46 Use credentials of admin and admin for authentication Note: If admin/admin credentials do not work then you may try using cisco/cisco or cisco1/cisco1 On the SSH connection to vEdge, execute the below commands. At this stage no IP routes have been received over OMP by this vEdge, so you will see no output on the OMP routes command: show omp routes show ip route On the SSH connection to vEdge, execute the below commands to verify that IPSec tunnels are setup to remote vEdges. BFD is enabled by default on the IPSec tunnels: show bfd session show bfd session | tab Below screenshot shows the output of above command confirming that IPSec tunnels on both WAN links are setup to DC and BR2:","title":"Step 1: Verify IPSec tunnels on BR1"},{"location":"Task4-Full-Mesh/#step-2-verify-ipsec-tunnels-on-br2","text":"You can launch SSH to vEdge in Branch-2 by using MPutty client on the Remote Desktop: SSH to OOB Management IP address of BR2-vEdge : 198.18.134.49 Use credentials of admin and admin for authentication Note: If admin/admin credentials do not work then you may try using cisco/cisco or cisco1/cisco1 On the SSH connection to vEdge, execute the below commands to verify that OMP routes have been received by this vEdge: show omp routes show ip route On the SSH connection to vEdge, execute the below commands to verify that IPSec tunnels are setup to remote vEdges. BFD is enabled by default on the IPSec tunnels: show bfd session show bfd session | tab Below screenshot shows the output of above command confirming that IPSec tunnels on both WAN links are setup to DC and BR1:","title":"Step 2: Verify IPSec tunnels on BR2"},{"location":"Task4-Full-Mesh/#step-3-verify-ipsec-tunnels-on-dc","text":"You can launch SSH to vEdge on DC by using MTPutty client on the Remote Desktop: SSH to OOB Management IP address of DC1-VEDGE : 198.18.134.47 Use credentials of admin and admin for authentication Note: If admin/admin credentials do not work then you may try using cisco/cisco or cisco1/cisco1 On the SSH connection to vEdge, execute the below commands to verify that OMP routes have been received by this vEdge: show omp routes show ip route On the SSH connection to vEdge, execute the below commands to verify that IPSec tunnels are setup to remote vEdges. BFD is enabled by default on the IPSec tunnels: show bfd session show bfd session | tab Below screenshot shows the output of above command confirming that IPSec tunnels on both WAN links are setup to BR1 and BR2: This concludes this task to verify the full mesh topology","title":"Step 3: Verify IPSec tunnels on DC"},{"location":"Task5-VPN%20creations/","text":"Task 5 - VPN on the Fabric This task will walk through the steps to create full mesh VPN on the SD-WAN Fabric. Hence the traffic on these VPNs can be passed on the SDWAN Fabric keeping the end-to-end segmentation. We will create VPN number 10, 20, 30 in this exercise. . This configuration of vEdge can be done via Feature Templates or by using CLI Template on the vManage. We will use CLI Template of the vEdge for this lab. To provide differentiation, two separate CLI Templates will be created for vEdges in DC and Branches. SDWAN Lab Topology The logical topology of VPN number 10 is shown in below figure: Pre-requisite: SDWAN controllers and 3 vEdges (in Branches & DC) must be fully operational. If those are not installed (or not operational) then please complete the previous Tasks first. Step 1: Create VPNs on Branch 1 Log on to the vManage from a web browser (if not already open) and use credentials of admin and admin : On the vManage GUI, navigate to Configuration > Templates > Device . Then Select the CLI template named \"BR1-vEdge01\" . Next, Click on the three dots on right-side as shown in below screenshot. Edit option will allow you to add additional configurations in this template. Scroll all the way to the end of existing template, Then you can add (copy & paste will work) the below configuration at the end of the exiting template, Do not make any other changes to existing configurations in this template vpn 10 name AppVPN interface Loopback10 ip address 10.102.10.10/32 no shutdown ! vpn 20 name BusinessVPN interface Loopback20 ip address 10.102.20.10/32 no shutdown ! vpn 30 name MarketingVPN interface Loopback30 ip address 10.102.30.10/32 no shutdown Important Note: Be very careful in making configuration changes on vEdge. Do NOT change any configuration of VPN 512 as it can result in loss of connectivity to the vEdge - which can not be restored. You will have to start the lab again from Task #1 if you loose network connectivity to a vEdge. After adding above configuration to this Template, Click on Update button. On the next screen, Select the BR1-vEdge under the Device list section (left part of screen). Then Select both \"Config Preview\" and \"Config Diff\" options to verify that VPN 10 related configurations are added to this vEdge, and no changes to VPN 512 (or other interfaces) are done. Important Note: Be very careful in making configuration changes on vEdge. Do NOT change any configuration of VPN 512 as it can result in loss of connectivity to the vEdge - which can not be restored. You will have to start the lab again from Task #1 if you loose network connectivity to a vEdge. Once you have verifed the config changes Click on Configure Devices button on the lower section of screen, as shown in below screenshot: This completes the configuration of VPN 10, 20 & 30 on BR1-vEdge Step 3: Create VPNs on Data Center and Branch 2 Now lets create VPNs on remaining vEdge. Follow the same steps of modifying the template and add the following configs for DC and BR2 vEdge Configs DC1-vEdge01 vpn 10 interface loopback10 ip address 10.101.10.10/32 no shutdown ! vpn 20 interface loopback20 ip address 10.101.20.10/32 no shutdown ! vpn 30 interface loopback30 ip address 10.101.30.10/32 no shutdown BR2-vEdge01 vpn 10 interface loopback10 ip address 10.103.10.10/32 no shutdown ! vpn 20 interface loopback20 ip address 10.103.20.10/32 no shutdown ! vpn 30 interface loopback30 ip address 10.103.30.10/32 no shutdown Step 4: Verify VPNs routing on all vEdges Now we can verify the IP connectivity between vEdge in Branch-1 and Branch-2 on the VPN 10. Execute below commands on show ip route show ip route vpn 10 show omp routes show omp routes vpn 10 You should verify that each vEdge has learned the LAN segment IP address of remote vEdge (within VPN 10, 20 and 30) ping remomte IPs to verify connectivity ping 10.101.10.10 vpn 10 You have now completed this task of adding VPNs on the SD-WAN Fabric","title":"Task 5 Establish VPN connectivity on Fabric"},{"location":"Task5-VPN%20creations/#task-5-vpn-on-the-fabric","text":"This task will walk through the steps to create full mesh VPN on the SD-WAN Fabric. Hence the traffic on these VPNs can be passed on the SDWAN Fabric keeping the end-to-end segmentation. We will create VPN number 10, 20, 30 in this exercise. . This configuration of vEdge can be done via Feature Templates or by using CLI Template on the vManage. We will use CLI Template of the vEdge for this lab. To provide differentiation, two separate CLI Templates will be created for vEdges in DC and Branches.","title":"Task 5 - VPN on the Fabric"},{"location":"Task5-VPN%20creations/#sdwan-lab-topology","text":"The logical topology of VPN number 10 is shown in below figure: Pre-requisite: SDWAN controllers and 3 vEdges (in Branches & DC) must be fully operational. If those are not installed (or not operational) then please complete the previous Tasks first.","title":"SDWAN Lab Topology"},{"location":"Task5-VPN%20creations/#step-1-create-vpns-on-branch-1","text":"Log on to the vManage from a web browser (if not already open) and use credentials of admin and admin : On the vManage GUI, navigate to Configuration > Templates > Device . Then Select the CLI template named \"BR1-vEdge01\" . Next, Click on the three dots on right-side as shown in below screenshot. Edit option will allow you to add additional configurations in this template. Scroll all the way to the end of existing template, Then you can add (copy & paste will work) the below configuration at the end of the exiting template, Do not make any other changes to existing configurations in this template vpn 10 name AppVPN interface Loopback10 ip address 10.102.10.10/32 no shutdown ! vpn 20 name BusinessVPN interface Loopback20 ip address 10.102.20.10/32 no shutdown ! vpn 30 name MarketingVPN interface Loopback30 ip address 10.102.30.10/32 no shutdown Important Note: Be very careful in making configuration changes on vEdge. Do NOT change any configuration of VPN 512 as it can result in loss of connectivity to the vEdge - which can not be restored. You will have to start the lab again from Task #1 if you loose network connectivity to a vEdge. After adding above configuration to this Template, Click on Update button. On the next screen, Select the BR1-vEdge under the Device list section (left part of screen). Then Select both \"Config Preview\" and \"Config Diff\" options to verify that VPN 10 related configurations are added to this vEdge, and no changes to VPN 512 (or other interfaces) are done. Important Note: Be very careful in making configuration changes on vEdge. Do NOT change any configuration of VPN 512 as it can result in loss of connectivity to the vEdge - which can not be restored. You will have to start the lab again from Task #1 if you loose network connectivity to a vEdge. Once you have verifed the config changes Click on Configure Devices button on the lower section of screen, as shown in below screenshot: This completes the configuration of VPN 10, 20 & 30 on BR1-vEdge","title":"Step 1: Create VPNs on Branch 1"},{"location":"Task5-VPN%20creations/#step-3-create-vpns-on-data-center-and-branch-2","text":"Now lets create VPNs on remaining vEdge. Follow the same steps of modifying the template and add the following configs for DC and BR2 vEdge Configs DC1-vEdge01 vpn 10 interface loopback10 ip address 10.101.10.10/32 no shutdown ! vpn 20 interface loopback20 ip address 10.101.20.10/32 no shutdown ! vpn 30 interface loopback30 ip address 10.101.30.10/32 no shutdown BR2-vEdge01 vpn 10 interface loopback10 ip address 10.103.10.10/32 no shutdown ! vpn 20 interface loopback20 ip address 10.103.20.10/32 no shutdown ! vpn 30 interface loopback30 ip address 10.103.30.10/32 no shutdown","title":"Step 3: Create VPNs on Data Center and Branch 2"},{"location":"Task5-VPN%20creations/#step-4-verify-vpns-routing-on-all-vedges","text":"Now we can verify the IP connectivity between vEdge in Branch-1 and Branch-2 on the VPN 10. Execute below commands on show ip route show ip route vpn 10 show omp routes show omp routes vpn 10 You should verify that each vEdge has learned the LAN segment IP address of remote vEdge (within VPN 10, 20 and 30) ping remomte IPs to verify connectivity ping 10.101.10.10 vpn 10 You have now completed this task of adding VPNs on the SD-WAN Fabric","title":"Step 4: Verify VPNs routing on all vEdges"},{"location":"Task6-HubnSpoke_VPN20/","text":"Task 8 - Creating Hub and Spoke Topoloy This task will walk you through the steps to create Hub and Spoke topology for all branches. For AWS we will block TLOC coming in from BR1 and BR2. Step 1: Verify vEdge routes for VPN10, VPN20 and VPN30 In this step we will SSH to the vEdge in Branch1 and Branch2 and verify routing table showing all connectios are fully mesh. Launch Mputty application from the Remote desktop by clicking on it's icon on the desktop: Using MPutty on your Remote Desktop session, initiate a SSH session to the BR1-vEdge with IP address of 198.18.134.105 this vEdge ( BR1-vEdge ). You can use credentials of admin and admin for authentication. If prompted for \"Putty Security Alert\" then Trust the host by clicking \"Yes\" on dialog box. The SSH credentials (username and password) are admin and admin respectively Note: If admin/admin credentials do not work then you may try using cisco/cisco or cisco1/cisco1 On the SSH connection, execute the below command to view configuration of VPN 20 on BR1-vEdge: show run vpn 20 Below screenshot shows VPN 20 configs: Below screenshot BR2-vEdge for VPN20: Execute below command to verify the routing table for VPN 20 on both vEdge: show ip route vpn 20 As shown in the output in the below screenshot, prefix 10.20.2.1/32 (BR2 VPN 20 Loopback20) is directly received from TLOC IP 10.4.0.1 (BR2-TlOC) from both links (MPLS and Private1). Also prefix 10.20.100.1/32 (DC-vEdge loopback20) is directly received from TLOC IP 10.1.0.1 (DC-vEdge) from both links (MPLS and Private1). Lets look at the screenshots from BR2 which shows that all prefixes are directly received from respective vEdges. Below is the output for DC-vEDGE Note: You will notice that there no routes coming in from AWS-vEdges. This is because TLOCs are unreachable between branches and AWS. We will fix this towards the end of the this task. Let's verify the same using vManage Open Chrome Browser from Workstation and click Viptela Vmanage from Bookmark Toolbar At the login page enter user/pass: admin/admin and login. Verify the traffic path using vManage . Open vManage select Monitoring>Network Select BR1-vEdge Select Troubleshooting Select Trace Route Enter Destination IP , select VPN-20 and click Start * You can verify that the traffic is going directly to BR2-vEdge Follow the same steps and verify BR2-vEdge traffic path for VPN-20 towards BR1-vEdge . You will observe the below output. Note: Follow the same steps to verify VPN10 and VPN30 Step 2: Configure Policy on vManage to create Hub and Spoke Topology Configure Hub and Spoke policy from vManage. First we will create Site list, VPN list and TLOC list which will be referred by the policy in the later steps Click Configuration>Template Click Add Policy Select Site and click New Site List , enter the details as per below table and click Add . Fill in Site details as per table below Site Name Site Number Data-Center 100 CL-Branch1 300 CL-Branch2 400 Note: You have to add each site seperately. Now Select TLOC , click New TLOC List , enter the details as per below table then click Add . Fill in TLOC details as per table below Site Name TLOC Color Encap Data-Center 172.16.101.1 private1 ipsec Data-Center 172.16.101.1 mpls ipsec Branch1 172.16.102.1 private1 ipsec Branch1 172.16.102.1 mpls ipsec Branch2 172.16.103.1 private1 ipsec Branch2 172.16.103.1 mpls ipsec Enter Data-Center TLOC values for color mpls and click Add TLOC Enter Data-Center TLOC values for color private1 and click Save Repeat the same step for Branch 1 & 2 For adding VPN List Select VPN , click New VPN List , enter the details as per below table then click Add . VPN Name VPN Number BusinessVPN 20 AppVPN 10 Marketing 30 Repeat the same task for AppVPN and Marketing. Once the task is complete, below is how the VPN list looks like. Click Next , below page will open. Click Add Topology then click Custom Control (Route & TLOC) Below page will open, on the Middle-Right corner, click pencil icon Change the Default Action from Reject to Accept , then click Save Match And Action Verify Default Action is changed to Accept Enter Name and Description and click Sequence Type Name : Hub-Spoke Description : Hub and Spoke Topology Click Route Click Sequence Rule Click Site and under Site list Select CL-Branch1 , then click Action Select Accept then click TLOC . Under TLOC List enter Date-Center then click Save Match And Actions Repeat the same steps for Branch2 and once complete Click Save Control Policy located at the bottom of the page Click Save Control Policy Click Next , below screen will appear. Click Next again on Application Aware Routing Screen Enter Policy Name and Description then click New Site List Name : Hub-Spoke Description : Hub and Spoke Policy On Outbound Site List select CL-Branch1 , Cl-Branch2 ignore AWS as shown in the picture Click Add Click Save Policy The Hub and Spoke policy is created, verify policy clicking \"...\" on the right side and select Preview Below is the snapshot, what will be configured as part of the Hub and Spoke Policy policy control-policy Hub-Spoke sequence 1 match route site-list CL-Branch2 ! action accept set tloc-list Data-Center ! ! ! sequence 11 match route site-list CL-Branch1 ! action accept set tloc-list Data-Center ! ! ! default-action accept ! ! site-list AllBranches site-id 300-499 ! site-list CL-Branch1 site-id 300 ! site-list CL-Branch2 site-id 400 ! tloc-list Data-Center tloc 10.1.0.1 color mpls encap ipsec tloc 10.1.0.1 color private1 encap ipsec ! ! ! site-list CL-Branch1 control-policy Hub-Spoke out ! site-list CL-Branch2 control-policy Hub-Spoke out ! ! Click OK , then activate the policy clicking \"...\" on the right side and select Activate Click Activate again The process will start and you can track the status from the Status Bar , once the task is sucessfully complete. You will Status as Sucess Below is the output once the task is sucessfully completed. Verify the policy. Launch Mputty application from the Remote desktop and login to BR1-vEdge and run the following command show ip route vpn 20 You can notice that the prefix 10.20.2.1/32 (BR2 VPN 20 Loopback20) is now received from TLOC IP 10.1.0.1 (DC-TlOC) from both links (MPLS and Private1). Verify the same from BR2 and you see prefixes are received from DC. Verify the traffic path using vManage . Open vManage select Monitoring>Network Select BR1-vEdge Select Troubleshooting Select Trace Route Enter Destination IP , select VPN-20 and click Start * You can observe that the traffic is now going via DC-vEdge Loopback IP 10.200.100.1 towards BR2-vEdge . Now Verify BR2-vEdge traffic path for VPN-20 towards BR1-vEdge . You will observe the below output. Verify connectivity between all Branches on all VPNs (10, 20, 30) Congratulations, you have completed the and you are now an expert on Cisco SD-WAN technologies.","title":"Task 6 Task 8 Hub & Spoke Topology"},{"location":"Task6-HubnSpoke_VPN20/#task-8-creating-hub-and-spoke-topoloy","text":"This task will walk you through the steps to create Hub and Spoke topology for all branches. For AWS we will block TLOC coming in from BR1 and BR2.","title":"Task 8 - Creating Hub and Spoke Topoloy"},{"location":"Task6-HubnSpoke_VPN20/#step-1-verify-vedge-routes-for-vpn10-vpn20-and-vpn30","text":"In this step we will SSH to the vEdge in Branch1 and Branch2 and verify routing table showing all connectios are fully mesh. Launch Mputty application from the Remote desktop by clicking on it's icon on the desktop: Using MPutty on your Remote Desktop session, initiate a SSH session to the BR1-vEdge with IP address of 198.18.134.105 this vEdge ( BR1-vEdge ). You can use credentials of admin and admin for authentication. If prompted for \"Putty Security Alert\" then Trust the host by clicking \"Yes\" on dialog box. The SSH credentials (username and password) are admin and admin respectively Note: If admin/admin credentials do not work then you may try using cisco/cisco or cisco1/cisco1 On the SSH connection, execute the below command to view configuration of VPN 20 on BR1-vEdge: show run vpn 20 Below screenshot shows VPN 20 configs: Below screenshot BR2-vEdge for VPN20: Execute below command to verify the routing table for VPN 20 on both vEdge: show ip route vpn 20 As shown in the output in the below screenshot, prefix 10.20.2.1/32 (BR2 VPN 20 Loopback20) is directly received from TLOC IP 10.4.0.1 (BR2-TlOC) from both links (MPLS and Private1). Also prefix 10.20.100.1/32 (DC-vEdge loopback20) is directly received from TLOC IP 10.1.0.1 (DC-vEdge) from both links (MPLS and Private1). Lets look at the screenshots from BR2 which shows that all prefixes are directly received from respective vEdges. Below is the output for DC-vEDGE Note: You will notice that there no routes coming in from AWS-vEdges. This is because TLOCs are unreachable between branches and AWS. We will fix this towards the end of the this task. Let's verify the same using vManage Open Chrome Browser from Workstation and click Viptela Vmanage from Bookmark Toolbar At the login page enter user/pass: admin/admin and login. Verify the traffic path using vManage . Open vManage select Monitoring>Network Select BR1-vEdge Select Troubleshooting Select Trace Route Enter Destination IP , select VPN-20 and click Start * You can verify that the traffic is going directly to BR2-vEdge Follow the same steps and verify BR2-vEdge traffic path for VPN-20 towards BR1-vEdge . You will observe the below output. Note: Follow the same steps to verify VPN10 and VPN30","title":"Step 1: Verify vEdge routes for VPN10, VPN20 and VPN30"},{"location":"Task6-HubnSpoke_VPN20/#step-2-configure-policy-on-vmanage-to-create-hub-and-spoke-topology","text":"Configure Hub and Spoke policy from vManage. First we will create Site list, VPN list and TLOC list which will be referred by the policy in the later steps Click Configuration>Template Click Add Policy Select Site and click New Site List , enter the details as per below table and click Add . Fill in Site details as per table below Site Name Site Number Data-Center 100 CL-Branch1 300 CL-Branch2 400 Note: You have to add each site seperately. Now Select TLOC , click New TLOC List , enter the details as per below table then click Add . Fill in TLOC details as per table below Site Name TLOC Color Encap Data-Center 172.16.101.1 private1 ipsec Data-Center 172.16.101.1 mpls ipsec Branch1 172.16.102.1 private1 ipsec Branch1 172.16.102.1 mpls ipsec Branch2 172.16.103.1 private1 ipsec Branch2 172.16.103.1 mpls ipsec Enter Data-Center TLOC values for color mpls and click Add TLOC Enter Data-Center TLOC values for color private1 and click Save Repeat the same step for Branch 1 & 2 For adding VPN List Select VPN , click New VPN List , enter the details as per below table then click Add . VPN Name VPN Number BusinessVPN 20 AppVPN 10 Marketing 30 Repeat the same task for AppVPN and Marketing. Once the task is complete, below is how the VPN list looks like. Click Next , below page will open. Click Add Topology then click Custom Control (Route & TLOC) Below page will open, on the Middle-Right corner, click pencil icon Change the Default Action from Reject to Accept , then click Save Match And Action Verify Default Action is changed to Accept Enter Name and Description and click Sequence Type Name : Hub-Spoke Description : Hub and Spoke Topology Click Route Click Sequence Rule Click Site and under Site list Select CL-Branch1 , then click Action Select Accept then click TLOC . Under TLOC List enter Date-Center then click Save Match And Actions Repeat the same steps for Branch2 and once complete Click Save Control Policy located at the bottom of the page Click Save Control Policy Click Next , below screen will appear. Click Next again on Application Aware Routing Screen Enter Policy Name and Description then click New Site List Name : Hub-Spoke Description : Hub and Spoke Policy On Outbound Site List select CL-Branch1 , Cl-Branch2 ignore AWS as shown in the picture Click Add Click Save Policy The Hub and Spoke policy is created, verify policy clicking \"...\" on the right side and select Preview Below is the snapshot, what will be configured as part of the Hub and Spoke Policy policy control-policy Hub-Spoke sequence 1 match route site-list CL-Branch2 ! action accept set tloc-list Data-Center ! ! ! sequence 11 match route site-list CL-Branch1 ! action accept set tloc-list Data-Center ! ! ! default-action accept ! ! site-list AllBranches site-id 300-499 ! site-list CL-Branch1 site-id 300 ! site-list CL-Branch2 site-id 400 ! tloc-list Data-Center tloc 10.1.0.1 color mpls encap ipsec tloc 10.1.0.1 color private1 encap ipsec ! ! ! site-list CL-Branch1 control-policy Hub-Spoke out ! site-list CL-Branch2 control-policy Hub-Spoke out ! ! Click OK , then activate the policy clicking \"...\" on the right side and select Activate Click Activate again The process will start and you can track the status from the Status Bar , once the task is sucessfully complete. You will Status as Sucess Below is the output once the task is sucessfully completed. Verify the policy. Launch Mputty application from the Remote desktop and login to BR1-vEdge and run the following command show ip route vpn 20 You can notice that the prefix 10.20.2.1/32 (BR2 VPN 20 Loopback20) is now received from TLOC IP 10.1.0.1 (DC-TlOC) from both links (MPLS and Private1). Verify the same from BR2 and you see prefixes are received from DC. Verify the traffic path using vManage . Open vManage select Monitoring>Network Select BR1-vEdge Select Troubleshooting Select Trace Route Enter Destination IP , select VPN-20 and click Start * You can observe that the traffic is now going via DC-vEdge Loopback IP 10.200.100.1 towards BR2-vEdge . Now Verify BR2-vEdge traffic path for VPN-20 towards BR1-vEdge . You will observe the below output. Verify connectivity between all Branches on all VPNs (10, 20, 30) Congratulations, you have completed the and you are now an expert on Cisco SD-WAN technologies.","title":"Step 2: Configure Policy on vManage to create Hub and Spoke Topology"},{"location":"Topology/","text":"Lab Topology Management IP Addressing Hostname IP Address Credentials Windows Jump Station 198.18.133.252 administrator/C1sco12345 vManage 198.18.134.50 admin/admin vSmart 198.18.134.51 admin/admin vBond 198.18.134.45 admin/admin","title":"Topology"},{"location":"Topology/#lab-topology","text":"","title":"Lab Topology"},{"location":"Topology/#management-ip-addressing","text":"Hostname IP Address Credentials Windows Jump Station 198.18.133.252 administrator/C1sco12345 vManage 198.18.134.50 admin/admin vSmart 198.18.134.51 admin/admin vBond 198.18.134.45 admin/admin","title":"Management IP Addressing"},{"location":"pics/readme/","text":"Pic folder","title":"Readme"}]}